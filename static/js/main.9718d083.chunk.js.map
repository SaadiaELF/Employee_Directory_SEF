{"version":3,"sources":["components/employeesTable.js","components/search.js","components/jumbotron.js","utils/API.js","components/resultContainer.js","App.js","index.js"],"names":["styles","tableStyle","width","EmployeesTable","props","className","style","onClick","sortByNameHandler","scope","sortByDOBHandler","sortByCountryHandler","results","map","result","name","first","last","alt","src","picture","thumbnail","dateFormat","dob","date","location","country","email","cell","login","uuid","inputStyle","Search","onChange","handleInputChange","value","search","type","placeholder","aria-label","aria-describedby","handleFormSubmit","id","Jumbotron","axios","get","ResultContainer","state","loadEmployees","API","then","res","setState","data","catch","err","console","log","searchHandler","searchTerm","filteredData","filter","toLowerCase","includes","event","preventDefault","target","sortedResults","sort","a","b","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9718d083.chunk.js","sourcesContent":["import React from \"react\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst styles = {\r\n    tableStyle: {\r\n        width: '90%'\r\n    }\r\n};\r\n\r\n// Rendering employee table\r\nfunction EmployeesTable(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"table-responsive \">\r\n                <table className=\"table align-middle table-hover table-bordered border-info mx-auto\" style={styles.tableStyle}>\r\n                    <thead>\r\n                        <tr className=\"table-info\">\r\n                            <th onClick={props.sortByNameHandler} scope=\"col\">Name</th>\r\n                            <th scope=\"col\">Photo</th>\r\n                            <th onClick={props.sortByDOBHandler} scope=\"col\">Date of Birth</th>\r\n                            <th onClick={props.sortByCountryHandler} scope=\"col\">Country</th>\r\n                            <th scope=\"col\">Email</th>\r\n                            <th scope=\"col\">Phone</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {/* Mapping through api results and creating a row for each user*/}\r\n                        {props.results.map(result => (\r\n                            <tr key={result.login.uuid} >\r\n                                <th scope=\"row\">{`${result.name.first} ${result.name.last}`}</th>\r\n                                <td><img alt={`${result.name.first} ${result.name.last}`} className=\"img-fluid\" src={result.picture.thumbnail} /></td>\r\n                                {/* formating date */}\r\n                                <td>{dateFormat(result.dob.date, \"dd, mmmm, yyyy\")}</td>\r\n                                <td>{result.location.country}</td>\r\n                                <td>{result.email}</td>\r\n                                <td>{result.cell}</td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default EmployeesTable;","import React from \"react\";\r\n\r\nconst styles = {\r\n  inputStyle: {\r\n    width: '30%'\r\n  }\r\n};\r\n\r\n// Rendering search input\r\nfunction Search(props) {\r\n  return (\r\n    <div className=\"input-group mb-3 position-absolute start-30 end-30 \" style={styles.inputStyle}>\r\n      <input\r\n        onChange={props.handleInputChange}\r\n        value={props.search}\r\n        name=\"search\"\r\n        type=\"text\"\r\n        className=\"form-control\"\r\n        placeholder=\"Search\"\r\n        aria-label=\"Search\"\r\n        aria-describedby=\"button-addon\" />\r\n      <button onClick={props.handleFormSubmit} className=\"btn btn-outline-dark\" type=\"button\" id=\"button-addon\">Search</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Search;","import React from \"react\";\r\nimport Search from \"./search\";\r\n\r\n// Creating a jumbotron holding a search input\r\nfunction Jumbotron(props) {\r\n    return (\r\n        <div className=\"p-5 m-4  bg-info border rounded-3\">\r\n            <div className=\"container-fluid py-5\">\r\n                <h1 className=\"display-5 fw-bold\">Employee Directory</h1>\r\n                <p className=\"col-md-8 fs-4\">Click on the columns labels to filter by heading or use the search box to narrow your results.</p>\r\n                <Search\r\n                    search={props.search}\r\n                    handleFormSubmit={props.handleFormSubmit}\r\n                    handleInputChange={props.handleInputChange}\r\n                />\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Jumbotron;","import axios from \"axios\";\r\n\r\nconst URL = \"https://randomuser.me/api/?results=20\";\r\n\r\nexport default {\r\n  getRandomEmployees: function() {\r\n    return axios.get(URL);\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport EmployeesTable from \"./employeesTable\";\r\nimport Jumbotron from \"./jumbotron\";\r\nimport API from \"../utils/API\";\r\n\r\n// Extending a Component class\r\nclass ResultContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: []\r\n  };\r\n\r\n  // Mounting component with random employees\r\n  componentDidMount() {\r\n    this.loadEmployees();\r\n  };\r\n\r\n  // Loading random employees from the api call and storing the results in the state\r\n  loadEmployees = () => {\r\n    API.getRandomEmployees()\r\n      .then(res => this.setState({ results: res.data.results }))\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  // Filtering result by a search term\r\n  searchHandler = (searchTerm) => {\r\n    const filteredData = this.state.results.filter(result => result.location.country.toLowerCase().includes(searchTerm.toLowerCase()) || result.name.first.toLowerCase().includes(searchTerm.toLowerCase()) || result.name.last.toLowerCase().includes(searchTerm.toLowerCase()) || result.dob.date.toLowerCase().includes(searchTerm.toLowerCase()))\r\n    this.setState({ results: filteredData })\r\n  };\r\n\r\n  // Storing the search term inside the state\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchHandler(this.state.search);\r\n  };\r\n\r\n  // Setting a state to handle input change\r\n  handleInputChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // Sorting table by first name\r\n  sortByNameHandler = () => {\r\n    const sortedResults = this.state.results.sort((a, b) => (a.name.first > b.name.first) ? 1 : -1);\r\n    this.setState({ results: sortedResults  })\r\n  };\r\n\r\n   // Sorting table by date of birth\r\n  sortByDOBHandler = () => {\r\n    const sortedResults = this.state.results.sort((a, b) => (a.dob.date > b.dob.date) ? -1 : 1);\r\n    this.setState({ results: sortedResults })\r\n  };\r\n\r\n   // Sorting table by country\r\n  sortByCountryHandler = () => {\r\n    const sortedResults  = this.state.results.sort((a, b) => (a.location.country > b.location.country) ? 1 : -1);\r\n    this.setState({ results: sortedResults })\r\n  };\r\n\r\n  // rendering components\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Jumbotron\r\n          search={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <EmployeesTable\r\n          results={this.state.results}\r\n          sortByNameHandler={this.sortByNameHandler}\r\n          sortByDOBHandler={this.sortByDOBHandler}\r\n          sortByCountryHandler={this.sortByCountryHandler}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ResultContainer;","import React from \"react\";\nimport ResultContainer from \"./components/resultContainer\";\n\nfunction App() {\n  return <ResultContainer />;\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}